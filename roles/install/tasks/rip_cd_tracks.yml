---
# Extract music tracks from a cd image and convert them to ogg format.
#
# {{ tmp_dir.path }} must be registered before including this task list 
#
#
# Use the following format to include this task list:
#
#   - name: Extract music tracks from cd image files
#     ansible.builtin.include_tasks: rip_cd_tracks
#     loop: "{{ cd_images }}"
#     loop_control:
#         label: "{{ item.dest }}"
#
# {{ cd_images }} must be registered and in the form
#
#   cd_images:
#       - { bin: "file.bin", cue: "file.cue", dest: "/path/to/music/track" }
#
# If the bin and cue files are not in the root directory of {{ tmp_dir.path }},
# include subfolders in the variable definition.

- name: Rip tracks from CD
  ansible.builtin.command:
      argv:
          - bchunk
          - -w
          - "{{ tmp_dir.path }}/{{ item.bin }}"
          - "{{ tmp_dir.path }}/{{ item.cue }}"
          - "{{ item.dest }}/track"


- name: Delete the first track from the CD image
  block:

      - name: Find data tracks
        ansible.builtin.find:
            paths: "{{ item.dest }}"
            patterns: "track01.iso"
        register: files_to_delete

      - name: Remove data tracks
        ansible.builtin.file:
            path: "{{ file_item.path }}"
            state: absent
        loop: "{{ files_to_delete.files }}"
        loop_control:
            loop_var: file_item 
            label: "{{ file_item.path }}"


- name: Convert WAV files to OGG
  block:

      - name: Find WAV files
        ansible.builtin.find:
            paths: "{{ item.dest }}"
            patterns: "*.wav"
        register: wave_files

      - name: Convert WAV files to OGG
        ansible.builtin.command:
            argv:
                - oggenc
                - -Q
                - -q
                - 8
                - "{{ file_item.path }}"
        loop: "{{ wave_files.files }}"
        loop_control:
            loop_var: file_item
            label: "{{ file_item.path }}"

      - name: Delete WAV files
        ansible.builtin.file:
            path: "{{ file_item.path }}"
            state: absent
        loop: "{{ wave_files.files }}"
        loop_control:
            loop_var: file_item
            label: "{{ file_item.path }}"
